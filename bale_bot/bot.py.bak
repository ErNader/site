# -*- coding: utf-8 -*-

"""
فایل اصلی ربات بله
"""

import os
import sys
import asyncio
import logging
from pathlib import Path

# Add parent directory to path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from config import BOT_TOKEN
from handlers import register_handlers
from balethon import Client

# Set up logging
log_dir = Path("logs")
log_dir.mkdir(exist_ok=True)
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(log_dir / "bot.log"),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

async def main():
    if not BOT_TOKEN:
        logger.error("No bot token provided")
        return

    logger.info("Starting bot with token: %s", BOT_TOKEN[:10] + "...")
    
    client = Client(BOT_TOKEN)
    
    try:
        # Get and log bot info
        me = await client.get_me()
        logger.info("Bot info - ID: %s, Username: %s, Name: %s", me.id, me.username, me.first_name)
        
        # Connect to Bale
        logger.info("Connecting to Bale server...")
        await client.connect()
        logger.info("Connected successfully")
        
        # Register handlers
        await register_handlers(client)
        logger.info("Event handlers registered")
        
        # Start polling
        logger.info("Starting message polling...")
        await client.start_polling()
        logger.info("Bot is now running")
        
        # Keep the bot running
        await asyncio.Event().wait()
    except Exception as e:
        logger.error("Error running bot: %s", str(e))
    finally:
        await client.disconnect()
        logger.info("Bot disconnected")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("Bot stopped by user")
    except Exception as e:
        logger.error("Fatal error: %s", str(e))